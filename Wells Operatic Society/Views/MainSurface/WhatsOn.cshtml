@using System.Globalization
@using WellsOperaticSociety.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<List<WellsOperaticSociety.Models.Function>>

@functions
{
    readonly Random _rnd = new Random();
    private string GetImage(Function function)
    {
        return function.Image == 0 ? "" : Umbraco.TypedMedia(function.Image).GetCropUrl();
    }
    private string GetRandomBackgroundColour()
    {
        string[] colours = { "#d2691e", "#a52a2a", "#008080", "#00bfff" };

        var selection = _rnd.Next(0, colours.Length);

        return colours[selection];

    }
}

@if (Model.Count > 0)
{
    foreach (var func in Model)
    {
        <div class="col-sm-12">
            <div class="card card-horizontal">
                <div class="row">
                    <div class="col-sm-5">
                        <div style="background:@GetRandomBackgroundColour() url('@GetImage(func)'); background-position: center center; background-size: cover;" class="image">
                            <img style="display: none;" src="@GetImage(func)" alt="@func.DisplayName">
                            <div class="filter">
                                <a href="@func.Url" class="btn btn-neutral btn-round btn-fill"><i class="fa fa-heart"></i>Read more</a>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-7">
                        <div class="content">

                            <h4 class="title"><a class="card-link" href="@func.Url">@func.DisplayName</a></h4>
                            <div class="category">
                                <a class="card-link" href="@func.Url">
                                    <i class="pe-7s-date"></i>From @func.StartDate.ToShortDateString() to @func.EndDate.ToShortDateString()
                                </a>

                            </div>
                            <div class="description"><a class="card-link" href="@func.Url">@Html.Raw(func.ShortDescription)</a></div>

                            <div class="footer">
                                <div class="stats">
                                    @if (func.ButtonLink.IsNotNullOrEmpty())
                                    {
                                        {
                                            var target = func.OpenLinkInNewWindow ? " target='_blank" : string.Empty;
                                            var text = func.ButtonText.IsNullOrEmpty() ? "Book here" : func.ButtonText;

                                            <a class="btn btn-info btn-round btn-fill" href="@func.ButtonLink" @target><i class="fa fa-@func.IconForButton"></i>@text</a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div> <!-- end card -->
        </div>
    }
}
else
{
    //TODO:Come upwith and style no upcoming function page
    <p>There are no upcomming functions!</p>
}
