//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace WellsOperaticSociety.Models.UmbracoModels
{
	/// <summary>Shared</summary>
	[PublishedContentModel("shared")]
	public partial class Shared : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "shared";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Shared(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Shared, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return this.GetPropertyValue<string>("description"); }
		}

		///<summary>
		/// Display in footer
		///</summary>
		[ImplementPropertyType("displayInFooter")]
		public bool DisplayInFooter
		{
			get { return this.GetPropertyValue<bool>("displayInFooter"); }
		}

		///<summary>
		/// Exclude from Sitemap
		///</summary>
		[ImplementPropertyType("excludeFromSitemap")]
		public bool ExcludeFromSitemap
		{
			get { return this.GetPropertyValue<bool>("excludeFromSitemap"); }
		}

		///<summary>
		/// Keywords
		///</summary>
		[ImplementPropertyType("keywords")]
		public string Keywords
		{
			get { return this.GetPropertyValue<string>("keywords"); }
		}

		///<summary>
		/// Navigation Title: This is the title to use if the name is too long in menus if you do not enter it, it will use the name of the node
		///</summary>
		[ImplementPropertyType("navigationTitle")]
		public string NavigationTitle
		{
			get { return this.GetPropertyValue<string>("navigationTitle"); }
		}

		///<summary>
		/// Show in navigation
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return this.GetPropertyValue<bool>("showInNavigation"); }
		}
	}
}
