//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace WellsOperaticSociety.Models.UmbracoModels
{
	/// <summary>Function</summary>
	[PublishedContentModel("function")]
	public partial class Function : Functions
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "function";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Function(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Function, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Button Link: Link to whatever site they have. This could be a link to a website or ticket system etc.
		///</summary>
		[ImplementPropertyType("buttonLink")]
		public string ButtonLink
		{
			get { return this.GetPropertyValue<string>("buttonLink"); }
		}

		///<summary>
		/// Button Text: The text you would like to display on the button e.g. Book here or Find Out More
		///</summary>
		[ImplementPropertyType("buttonText")]
		public string ButtonText
		{
			get { return this.GetPropertyValue<string>("buttonText"); }
		}

		///<summary>
		/// Description: The full description of the show
		///</summary>
		[ImplementPropertyType("description")]
		public IHtmlString Description
		{
			get { return this.GetPropertyValue<IHtmlString>("description"); }
		}

		///<summary>
		/// Do not show in past productions: If selected, when function expires it will not be displayed in the past productions list
		///</summary>
		[ImplementPropertyType("doNotShowInPastProductions")]
		public bool DoNotShowInPastProductions
		{
			get { return this.GetPropertyValue<bool>("doNotShowInPastProductions"); }
		}

		///<summary>
		/// End Date: The date the function ends
		///</summary>
		[ImplementPropertyType("endDate")]
		public DateTime EndDate
		{
			get { return this.GetPropertyValue<DateTime>("endDate"); }
		}

		///<summary>
		/// Function Type: The type of function
		///</summary>
		[ImplementPropertyType("functionType")]
		public string FunctionType
		{
			get { return this.GetPropertyValue<string>("functionType"); }
		}

		///<summary>
		/// Gallery Images: The images that will be displayed in the gallery
		///</summary>
		[ImplementPropertyType("galleryImages")]
		public IEnumerable<IPublishedContent> GalleryImages
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("galleryImages"); }
		}

		///<summary>
		/// Icon for button: The icon that will appear on the button. These are Font awesome icons so look them up if you want to see what is available
		///</summary>
		[ImplementPropertyType("iconForButton")]
		public Newtonsoft.Json.Linq.JToken IconForButton
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("iconForButton"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IEnumerable<IPublishedContent> Image
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("image"); }
		}

		///<summary>
		/// Open link in new window: Opens the button link in a new window
		///</summary>
		[ImplementPropertyType("openLinkInNewWindow")]
		public bool OpenLinkInNewWindow
		{
			get { return this.GetPropertyValue<bool>("openLinkInNewWindow"); }
		}

		///<summary>
		/// Previous system id: to be deleted
		///</summary>
		[ImplementPropertyType("previousSystemId")]
		public int PreviousSystemId
		{
			get { return this.GetPropertyValue<int>("previousSystemId"); }
		}

		///<summary>
		/// Short Description: Used for the home page and anywhere where a short description should be used
		///</summary>
		[ImplementPropertyType("shortDescription")]
		public IHtmlString ShortDescription
		{
			get { return this.GetPropertyValue<IHtmlString>("shortDescription"); }
		}

		///<summary>
		/// Start Date: The date the function starts
		///</summary>
		[ImplementPropertyType("startDate")]
		public DateTime StartDate
		{
			get { return this.GetPropertyValue<DateTime>("startDate"); }
		}
	}
}
