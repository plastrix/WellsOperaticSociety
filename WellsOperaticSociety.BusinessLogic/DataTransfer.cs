using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using Newtonsoft.Json;
using WellsOperaticSociety.DAL;
using WellsOperaticSociety.Models.Enums;
using WellsOperaticSociety.Models.MemberModels;

namespace WellsOperaticSociety.BusinessLogic
{
    //TODO:Delete class after import
    public class DataTransfer
    {
        #region vars
        Dictionary<int, int> functions = new Dictionary<int, int>()
            {
                {1,5168},
{2,5169},
{3,5170},
{4,5171},
{5,5172},
{6,5173},
{7,5174},
{8,5175},
{9,5176},
{10,5177},
{11,5178},
{12,5179},
{13,5180},
{14,5181},
{15,5182},
{16,5183},
{17,5184},
{18,5185},
{19,5186},
{20,5187},
{21,5188},
{22,5189},
{23,5190},
{24,5191},
{25,5192},
{26,5193},
{27,5194},
{28,5195},
{29,5196},
{30,5197},
{31,5198},
{32,5199},
{33,5200},
{34,5201},
{35,5202},
{36,5203},
{37,5204},
{38,5205},
{39,5206},
{40,5207},
{41,5208},
{42,5209},
{43,5210},
{44,5211},
{45,5212},
{46,5213},
{47,5214},
{48,5215},
{49,5216},
{50,5217},
{51,5218},
{52,5219},
{53,5220},
{54,5221},
{55,5222},
{56,5223},
{57,5224},
{58,5225},
{59,5226},
{60,5227},
{61,5228},
{62,5229},
{63,5230},
{64,5231},
{65,5232},
{66,5233},
{67,5234},
{68,5235},
{69,5236},
{70,5237},
{71,5238},
{72,5239},
{73,5240},
{74,5241},
{75,5242},
{76,5243},
{77,5244},
{78,5245},
{79,5246},
{80,5247},
{81,5248},
{82,5249},
{83,5250},
{84,5251},
{85,5252},
{86,5253},
{87,5254},
{88,5255},
{89,5256},
{90,5257},
{91,5258},
{92,5259},
{93,5260},
{94,5261},
{95,5262},
{96,5263},
{97,5264},
{98,5265},
{99,5266},
{100,5267},
{101,5268},
{102,5269},
{103,5270},
{104,5271},
{105,5272},
{106,5273},
{107,5274},
{108,5275},
{109,5276},
{110,5277},
{111,5278},
{112,5279},
{113,5280},
{114,5281},
{115,5282},
{116,5283},
{117,5284},
{118,5285},
{119,5286},
{120,5287},
{121,5288},
{122,5289},
{123,5290},
{124,5291},
{125,5292},
{126,5293},
{127,5294},
{128,5295},
{129,5296},
{130,5297},
{131,5298},
{132,5299},
{133,5300},
{134,5301},
{135,5302},
{136,5303},
{137,5304},
{138,5305},
{139,5306},
{140,5307},
{141,5308},
{142,5309},
{143,5310},
{144,5311},
{145,5312},
{146,5313},
{147,5314},
{148,5315},
{149,5316},
{150,5317},
{151,5318},
{152,5319},
{153,5320},
{154,5321},
{155,5322},
{156,5323},
{157,5324},
{158,5325},
{159,5326},
{160,5327},
{161,5328},
{162,5329},
{163,5330},
{164,5331},
{165,5332},
{166,5333},
{167,5334},
{168,5335},
{169,5336},
{170,5337},
{171,5338},
{172,5339},
{173,5340},
{174,5341},
{175,5342},
{176,5343},
{177,5344},
{178,5345},
{179,5346},
{180,5347},
{181,5348},
{182,5349},
{183,5350},
{184,5351},
{185,5352},
{186,5353},
{187,5354},
{188,5355},
{189,5356},
{190,5357},
{191,5358},
{192,5359},
{193,5360},
{194,5361},
{195,5362},
{196,5363},
{197,5364},
{198,5365},
{199,5366},
{200,5367},
{201,5368},
{202,5369},
{203,5370},
{204,5371},
{205,5372},
{206,5373},
{207,5374},
{208,5375},
{210,5376},
{212,5378},
{213,5379},
{242,5380},
{243,5381},
{244,5382},
{245,5383},
{246,5384},
{253,5390},
{257,5394},
{259,5395},
{260,5396},
{261,5397},
{262,5398},
{264,5399},
{265,5400},
{266,5401},
{267,5402},
{270,5405},
{271,5406},
{272,5407},
{273,5408},
{276,5411},
{280,5414},
{284,5416},
{285,5417},
{286,5418},
{290,5422},
{291,5423},
{292,5424},
{293,5425},
{294,5426},
{295,5427},
{297,5428},
{298,5429},
{300,5431},
{302,5433},
{303,5434},
{304,5435},
{313,5444},
{314,5445},
{317,5447},
{318,5448},
{319,5449},
{320,5450},
{321,5451},
{323,5453},
{324,5454},
{325,5455},
{326,5456},
{329,5459},
{330,5460},
{331,5461},
{332,5462},
{335,5465},
{336,5466},
{337,5467},
{341,5471},
{342,5472},
{343,5473},
{345,5475},
{353,5483},
{355,5485},
{356,5486},
{357,5487},
{359,5488},
{360,5489},
{367,5496},
{372,5500},
{373,5501},
{377,5505},
{381,5509},
{382,5510},
{383,5511},
{384,5512},
{387,5515}
            };
        Dictionary<int, int> member = new Dictionary<int, int>()
        {
{976,4359},
{234,4858},
{435,4352},
{9,4355},
{232,4851},
{3510,4854},
{1218,4857},
{335,5069},
{792,4653},
{148,4656},
{898,5062},
{1617,5065},
{3226,4450},
{543,4959},
{1325,4453},
{1546,4456},
{773,4758},
{586,4952},
{2946,4955},
{771,5166},
{1732,4751},
{3311,4754},
{1264,4757},
{2109,5160},
{893,5163},
{469,4558},
{2127,4551},
{105,4554},
{1969,4557},
{437,4358},
{3307,4351},
{8,4354},
{436,4357},
{231,4850},
{3509,4853},
{1600,4856},
{3493,5068},
{147,4652},
{2882,4655},
{966,5061},
{333,5064},
{61,4459},
{607,4659},
{350,4759},
{3228,4958},
{457,4452},
{59,4455},
{2309,4951},
{280,4954},
{501,4750},
{196,4753},
{502,4756},
{334,5066},
{606,5162},
{2666,5165},
{103,4550},
{104,4553},
{1970,4556},
{6,4350},
{351,4859},
{7,4353},
{10,4356},
{484,4658},
{233,4852},
{611,4855},
{3308,4651},
{481,4654},
{483,4657},
{726,5060},
{747,5063},
{1278,4458},
{969,4451},
{3309,4650},
{406,4454},
{458,4457},
{541,4950},
{279,4953},
{542,4956},
{412,4752},
{2514,4755},
{702,5161},
{896,5164},
{281,4957},
{470,4559},
{360,5067},
{744,4552},
{2894,4555},
{403,4329},
{566,4828},
{395,4325},
{518,4821},
{219,4824},
{221,4827},
{337,5079},
{2791,4640},
{929,4643},
{845,4646},
{596,5072},
{336,5075},
{184,4721},
{55,4440},
{361,4949},
{454,4443},
{186,4728},
{455,4446},
{274,4942},
{729,5110},
{276,4945},
{1857,5113},
{185,4724},
{2298,5116},
{2356,4727},
{519,4822},
{708,4528},
{2491,4521},
{768,4524},
{422,4527},
{430,4328},
{752,4720},
{429,4327},
{517,4820},
{739,4823},
{2038,4826},
{556,5078},
{479,4642},
{738,4645},
{3310,5071},
{782,5074},
{555,5077},
{2943,4449},
{1625,4948},
{3388,4442},
{57,4445},
{755,4941},
{275,4944},
{2668,5112},
{278,4947},
{894,5115},
{2945,4726},
{701,5119},
{423,4520},
{90,4523},
{1692,4526},
{494,4723},
{222,4829},
{2498,4326},
{344,5118},
{378,4648},
{2039,4825},
{143,4641},
{480,4644},
{1735,5070},
{145,4647},
{597,5073},
{610,5076},
{2897,4448},
{56,4441},
{453,4444},
{560,4729},
{456,4447},
{712,4940},
{540,4943},
{414,5111},
{3603,4722},
{603,5114},
{495,4725},
{575,5117},
{707,4529},
{557,4649},
{89,4522},
{91,4525},
{277,4946},
{554,5040},
{581,4339},
{523,4838},
{974,4332},
{733,4335},
{520,4831},
{224,4834},
{226,4837},
{327,5049},
{1947,4670},
{154,4673},
{324,5042},
{157,4676},
{2947,5045},
{291,4978},
{64,4470},
{593,4738},
{66,4473},
{72,4476},
{188,4731},
{1959,5100},
{189,4734},
{2331,5103},
{427,4737},
{1685,5106},
{725,4538},
{290,4977},
{93,4531},
{370,4534},
{95,4537},
{67,4474},
{2340,4338},
{3218,4331},
{431,4334},
{432,4337},
{223,4830},
{522,4833},
{225,4836},
{1164,5048},
{353,4972},
{153,4672},
{323,5041},
{156,4675},
{325,5044},
{506,5047},
{489,4679},
{70,4479},
{289,4976},
{460,4472},
{68,4475},
{409,4971},
{1323,4733},
{696,5102},
{497,4736},
{613,5105},
{92,4530},
{585,4533},
{94,4536},
{699,5109},
{490,4678},
{697,5108},
{2949,4330},
{524,4839},
{428,4333},
{396,4336},
{521,4832},
{516,4835},
{487,4671},
{288,4975},
{155,4674},
{552,5043},
{488,4677},
{2674,5046},
{547,4974},
{1224,4478},
{65,4471},
{498,4739},
{187,4730},
{69,4477},
{746,4970},
{287,4973},
{731,5101},
{496,4735},
{770,5104},
{612,5107},
{3613,4732},
{548,4979},
{96,4539},
{775,4532},
{2490,4535},
{475,4585},
{213,4808},
{28,4389},
{3102,4801},
{3452,4804},
{439,4382},
{3610,4807},
{3100,4385},
{329,5054},
{3300,4789},
{776,4660},
{587,5052},
{150,4663},
{330,5055},
{1966,4666},
{245,4883},
{363,4583},
{284,4961},
{1778,4708},
{62,4460},
{558,4969},
{1262,4463},
{973,4466},
{174,4701},
{759,4704},
{2795,5130},
{347,4707},
{561,5058},
{3221,4887},
{743,4781},
{2942,4508},
{209,4784},
{544,4965},
{3101,4787},
{722,4501},
{465,4504},
{2941,4507},
{473,4581},
{703,5133},
{365,4584},
{116,4587},
{440,4388},
{246,4884},
{212,4800},
{1940,4803},
{24,4381},
{512,4806},
{26,4384},
{152,4669},
{364,4387},
{244,4880},
{3604,4788},
{118,4589},
{588,5051},
{485,4662},
{2187,4885},
{404,4665},
{332,5057},
{248,4886},
{342,4964},
{591,4469},
{532,4889},
{3492,4462},
{459,4465},
{173,4700},
{491,4703},
{177,4706},
{2667,5132},
{546,4967},
{742,5135},
{190,4780},
{208,4783},
{563,5059},
{895,4786},
{1289,4881},
{2995,4500},
{464,4503},
{466,4506},
{1686,5136},
{3611,4580},
{576,4888},
{117,4588},
{3606,4586},
{780,5139},
{510,4809},
{286,4963},
{2948,4802},
{23,4380},
{509,4805},
{25,4383},
{1951,4668},
{27,4386},
{531,4882},
{713,5050},
{486,4661},
{328,5053},
{426,4664},
{1245,5056},
{2673,4667},
{983,5138},
{1994,4468},
{757,4968},
{1260,4709},
{3263,4461},
{1232,4464},
{420,4467},
{175,4702},
{582,4705},
{1960,5131},
{545,4966},
{568,5134},
{1085,5137},
{504,4782},
{358,4509},
{505,4785},
{285,4962},
{783,4502},
{80,4505},
{283,4960},
{474,4582},
{492,4714},
{507,4794},
{580,4517},
{2750,4597},
{182,4715},
{761,4410},
{210,4795},
{33,4398},
{401,4798},
{463,4490},
{183,4716},
{756,5028},
{37,4411},
{211,4796},
{34,4399},
{615,5120},
{3153,4491},
{261,4910},
{253,4898},
{3360,4717},
{2521,4990},
{319,5029},
{38,4412},
{408,4797},
{2808,4819},
{87,4518},
{76,4492},
{262,4911},
{130,4610},
{254,4899},
{123,4598},
{297,4991},
{165,4690},
{39,4413},
{732,5122},
{88,4519},
{944,4493},
{534,4912},
{3434,4611},
{124,4599},
{354,4992},
{166,4691},
{40,4414},
{599,5123},
{1214,4494},
{413,4913},
{2759,4612},
{493,4718},
{298,4993},
{369,4692},
{2358,5121},
{41,4415},
{3098,5124},
{2495,4495},
{367,4914},
{133,4613},
{673,4719},
{549,4994},
{167,4693},
{1222,4799},
{730,5125},
{1952,4496},
{592,4915},
{2719,4614},
{299,4995},
{168,4694},
{445,4417},
{1132,5126},
{2496,4497},
{2963,4916},
{135,4615},
{444,4416},
{300,4996},
{169,4695},
{29,4390},
{1942,5127},
{218,4818},
{594,4917},
{136,4616},
{301,4997},
{170,4696},
{314,5020},
{30,4391},
{2136,4810},
{762,4617},
{249,4890},
{171,4697},
{740,5021},
{400,4418},
{441,4392},
{368,4811},
{1968,4510},
{78,4498},
{250,4891},
{119,4590},
{315,5022},
{447,4419},
{1967,4393},
{1832,5128},
{511,4812},
{81,4511},
{79,4499},
{2472,4918},
{1243,4892},
{393,4591},
{2675,4998},
{3298,5023},
{442,4394},
{513,5129},
{3602,4813},
{2774,4512},
{264,4919},
{824,4618},
{748,4893},
{3303,4592},
{178,4710},
{410,4999},
{3224,4698},
{316,5024},
{584,4790},
{31,4395},
{514,4814},
{83,4513},
{3227,4619},
{356,4894},
{120,4593},
{179,4711},
{172,4699},
{3312,5025},
{583,4791},
{2455,4396},
{215,4815},
{84,4514},
{251,4895},
{476,4594},
{180,4712},
{317,5026},
{407,4792},
{348,4397},
{216,4816},
{85,4515},
{359,4896},
{121,4595},
{181,4713},
{318,5027},
{405,4793},
{217,4817},
{86,4516},
{252,4897},
{122,4596},
{16,4369},
{164,4689},
{236,4861},
{238,4868},
{1993,4362},
{13,4365},
{1238,4600},
{125,4603},
{127,4606},
{2040,5032},
{529,4867},
{528,4863},
{158,4680},
{1606,4683},
{162,4686},
{508,4400},
{375,4909},
{3302,4403},
{962,4406},
{235,4860},
{533,4902},
{71,4480},
{379,4905},
{461,4483},
{2672,4768},
{2494,4486},
{293,4982},
{384,5150},
{609,4761},
{295,4986},
{711,4764},
{605,5156},
{2036,4767},
{472,4568},
{816,4985},
{108,4561},
{3462,4564},
{727,5031},
{1234,4567},
{237,4862},
{774,4368},
{126,4604},
{75,4489},
{129,4609},
{2452,4361},
{12,4364},
{15,4367},
{569,4602},
{3220,4605},
{559,4865},
{975,4866},
{912,5034},
{1216,4984},
{321,5037},
{1219,4682},
{1733,4409},
{161,4685},
{1579,4908},
{1241,4402},
{2664,5153},
{2944,4405},
{256,4901},
{257,4904},
{73,4482},
{259,4907},
{3223,4485},
{553,5039},
{292,4981},
{503,4760},
{772,5152},
{754,4763},
{698,5155},
{2037,4766},
{564,4560},
{778,5159},
{2896,4563},
{1958,5151},
{826,4566},
{764,4864},
{1664,5038},
{1734,4404},
{128,4608},
{11,4360},
{452,4869},
{570,4363},
{14,4366},
{571,4601},
{2891,4688},
{320,5030},
{477,4607},
{728,5033},
{296,4989},
{2444,5036},
{159,4681},
{36,4408},
{402,4684},
{163,4687},
{343,5035},
{443,4401},
{74,4488},
{35,4407},
{255,4900},
{2793,4903},
{349,4481},
{258,4906},
{3222,4484},
{201,4769},
{462,4487},
{957,4980},
{346,5158},
{1221,4983},
{885,4988},
{705,4762},
{598,5154},
{198,4765},
{1544,4987},
{109,4569},
{710,4562},
{700,5157},
{471,4565},
{22,4379},
{2333,5009},
{3099,4878},
{17,4372},
{18,4375},
{874,4871},
{3494,4874},
{550,5002},
{241,4877},
{58,5005},
{272,4935},
{377,4633},
{1549,5082},
{1681,5146},
{814,4430},
{273,4939},
{51,4433},
{425,4436},
{537,4932},
{897,5089},
{207,4778},
{200,4771},
{1229,5140},
{204,4774},
{270,5143},
{2792,4777},
{305,5008},
{3103,4578},
{111,4571},
{3444,4574},
{115,4577},
{3020,5141},
{21,4378},
{1611,5081},
{601,5088},
{579,4371},
{737,4639},
{2312,4374},
{20,4377},
{267,4870},
{1261,4632},
{1055,5001},
{3605,4635},
{140,4636},
{304,5007},
{451,4439},
{340,5084},
{600,5087},
{3304,4938},
{50,4432},
{450,4435},
{2518,4931},
{302,5004},
{539,4934},
{3301,4937},
{3612,4936},
{199,4770},
{577,4631},
{1506,5142},
{206,4776},
{1688,5145},
{1736,4873},
{338,5080},
{142,4638},
{110,4570},
{562,4573},
{113,4576},
{734,4370},
{242,4879},
{438,4373},
{19,4376},
{530,4872},
{565,5000},
{239,4875},
{3219,5003},
{141,4637},
{303,5006},
{604,5149},
{53,4438},
{139,4630},
{339,5083},
{704,5086},
{49,4431},
{735,4434},
{52,4437},
{578,4930},
{538,4933},
{151,4779},
{777,5148},
{3600,4634},
{202,4772},
{240,4876},
{205,4775},
{385,5144},
{1507,5147},
{203,4773},
{114,4579},
{2786,4572},
{1548,4575},
{500,4749},
{366,4349},
{527,4848},
{1217,4342},
{399,4345},
{525,4841},
{228,4844},
{308,5012},
{1963,4621},
{573,5015},
{138,4626},
{1538,5092},
{602,5095},
{42,4420},
{536,4929},
{449,4423},
{45,4426},
{195,4748},
{779,4925},
{191,4741},
{194,4744},
{424,4747},
{376,5094},
{102,4548},
{229,4847},
{3299,4541},
{99,4544},
{101,4547},
{1215,4348},
{433,4341},
{2259,4846},
{398,4344},
{590,4629},
{760,4347},
{1543,4840},
{515,4843},
{307,5011},
{963,4622},
{310,5014},
{137,4625},
{311,5017},
{695,5091},
{47,4429},
{3483,5097},
{352,4928},
{448,4422},
{44,4425},
{265,4921},
{535,4924},
{271,4927},
{1547,4740},
{1693,4620},
{1964,4743},
{499,4746},
{2334,4540},
{2446,4623},
{98,4543},
{467,4546},
{2883,5099},
{397,4340},
{230,4849},
{434,4343},
{1220,4628},
{3450,4346},
{312,5018},
{227,4842},
{374,5010},
{526,4845},
{309,5013},
{572,4624},
{828,5016},
{608,4627},
{1941,5090},
{46,4428},
{2665,5096},
{43,4421},
{766,4424},
{567,4427},
{355,4920},
{266,4922},
{268,4923},
{269,4926},
{192,4742},
{709,5098},
{1244,4745},
{468,4549},
{313,5019},
{97,4542},
{100,4545},
{2838,5093}
        };
        #endregion

        #region DELETE!!!!!!!!!!!!!!
        public void PopulateMemberRoles()
        {
            using (
                StreamReader r = new StreamReader("D:\\Users\\Nick\\Desktop\\Import Data SQL\\Data\\MemberRoles.json"))
            {
                string json = r.ReadToEnd();
                //TODO: delete the temp class
                List<MemberToRoleExtension> items = JsonConvert.DeserializeObject<List<MemberToRoleExtension>>(json);
                List<MemberRolesInShow> list = new List<MemberRolesInShow>();
                Debug.WriteLine("Writing Members Roles");
                foreach (var tmp in items)
                {
                    if (!member.ContainsKey(tmp.PreviousMemberId) || !functions.ContainsKey(tmp.PreviousFunctionId))
                    {
                        if(!member.ContainsKey(tmp.PreviousMemberId))
                            Debug.WriteLine("Missing member: " + tmp.PreviousMemberId);
                        if (!functions.ContainsKey(tmp.PreviousFunctionId))
                            Debug.WriteLine("Missing function: " + tmp.PreviousFunctionId);
                        continue;
                    }
                    var x = new MemberRolesInShow();
                    x.Group = tmp.Group;
                    x.Role = tmp.Role;
                    x.MemberId = member[tmp.PreviousMemberId];
                    x.FunctionId = functions[tmp.PreviousFunctionId];
                    list.Add(x);
                }
                using (var db = new DataContext())
                {
                    db.MemberRolesInShows.AddRange(list);
                    db.SaveChanges();
                }
            }


        }

        public void PopulateMemberShips()
        {
            using (
                StreamReader r = new StreamReader("D:\\Users\\Nick\\Desktop\\Import Data SQL\\Data\\Memberships.json"))
            {
                string json = r.ReadToEnd();
                //TODO: delete the temp class
                List<MembershipsExtension> items = JsonConvert.DeserializeObject<List<MembershipsExtension>>(json);
                List<Membership> list = new List<Membership>();
                Debug.WriteLine("Writing Memberships");
                foreach (var tmp in items)
                {
                    if (!member.ContainsKey(tmp.PreviousMemberId))
                    {
                        if (!member.ContainsKey(tmp.PreviousMemberId))
                            Debug.WriteLine("Missing member: " + tmp.PreviousMemberId);
                        continue;
                    }
                    var x = new Membership();
                    x.StartDate = tmp.StartDate;
                    x.EndDate = tmp.EndDate;
                    x.Member = member[tmp.PreviousMemberId];
                    x.MembershipType = tmp.MembershipType;
                    x.IsSubscription = tmp.IsSubscription;
                    list.Add(x);
                }
                using (var db = new DataContext())
                {
                    db.Memberships.AddRange(list);
                    db.SaveChanges();
                }
            }
        }
        #endregion
    }

    //TODO:Delete
    public class MemberToRoleExtension : MemberRolesInShow
    {
        public int PreviousFunctionId { get; set; }
        public int PreviousMemberId { get; set; }
    }

    public class MembershipsExtension : Membership
    {
        public int PreviousMemberId { get; set; }
    }
}
