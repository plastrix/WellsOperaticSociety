using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using Newtonsoft.Json;
using WellsOperaticSociety.DAL;
using WellsOperaticSociety.Models.Enums;
using WellsOperaticSociety.Models.MemberModels;

namespace WellsOperaticSociety.BusinessLogic
{
    //TODO:Delete class after import
    public class DataTransfer
    {
        #region vars
        Dictionary<int, int> functions = new Dictionary<int, int>()
            {
                {1,5168},
{2,5169},
{3,5170},
{4,5171},
{5,5172},
{6,5173},
{7,5174},
{8,5175},
{9,5176},
{10,5177},
{11,5178},
{12,5179},
{13,5180},
{14,5181},
{15,5182},
{16,5183},
{17,5184},
{18,5185},
{19,5186},
{20,5187},
{21,5188},
{22,5189},
{23,5190},
{24,5191},
{25,5192},
{26,5193},
{27,5194},
{28,5195},
{29,5196},
{30,5197},
{31,5198},
{32,5199},
{33,5200},
{34,5201},
{35,5202},
{36,5203},
{37,5204},
{38,5205},
{39,5206},
{40,5207},
{41,5208},
{42,5209},
{43,5210},
{44,5211},
{45,5212},
{46,5213},
{47,5214},
{48,5215},
{49,5216},
{50,5217},
{51,5218},
{52,5219},
{53,5220},
{54,5221},
{55,5222},
{56,5223},
{57,5224},
{58,5225},
{59,5226},
{60,5227},
{61,5228},
{62,5229},
{63,5230},
{64,5231},
{65,5232},
{66,5233},
{67,5234},
{68,5235},
{69,5236},
{70,5237},
{71,5238},
{72,5239},
{73,5240},
{74,5241},
{75,5242},
{76,5243},
{77,5244},
{78,5245},
{79,5246},
{80,5247},
{81,5248},
{82,5249},
{83,5250},
{84,5251},
{85,5252},
{86,5253},
{87,5254},
{88,5255},
{89,5256},
{90,5257},
{91,5258},
{92,5259},
{93,5260},
{94,5261},
{95,5262},
{96,5263},
{97,5264},
{98,5265},
{99,5266},
{100,5267},
{101,5268},
{102,5269},
{103,5270},
{104,5271},
{105,5272},
{106,5273},
{107,5274},
{108,5275},
{109,5276},
{110,5277},
{111,5278},
{112,5279},
{113,5280},
{114,5281},
{115,5282},
{116,5283},
{117,5284},
{118,5285},
{119,5286},
{120,5287},
{121,5288},
{122,5289},
{123,5290},
{124,5291},
{125,5292},
{126,5293},
{127,5294},
{128,5295},
{129,5296},
{130,5297},
{131,5298},
{132,5299},
{133,5300},
{134,5301},
{135,5302},
{136,5303},
{137,5304},
{138,5305},
{139,5306},
{140,5307},
{141,5308},
{142,5309},
{143,5310},
{144,5311},
{145,5312},
{146,5313},
{147,5314},
{148,5315},
{149,5316},
{150,5317},
{151,5318},
{152,5319},
{153,5320},
{154,5321},
{155,5322},
{156,5323},
{157,5324},
{158,5325},
{159,5326},
{160,5327},
{161,5328},
{162,5329},
{163,5330},
{164,5331},
{165,5332},
{166,5333},
{167,5334},
{168,5335},
{169,5336},
{170,5337},
{171,5338},
{172,5339},
{173,5340},
{174,5341},
{175,5342},
{176,5343},
{177,5344},
{178,5345},
{179,5346},
{180,5347},
{181,5348},
{182,5349},
{183,5350},
{184,5351},
{185,5352},
{186,5353},
{187,5354},
{188,5355},
{189,5356},
{190,5357},
{191,5358},
{192,5359},
{193,5360},
{194,5361},
{195,5362},
{196,5363},
{197,5364},
{198,5365},
{199,5366},
{200,5367},
{201,5368},
{202,5369},
{203,5370},
{204,5371},
{205,5372},
{206,5373},
{207,5374},
{208,5375},
{210,5376},
{212,5378},
{213,5379},
{242,5380},
{243,5381},
{244,5382},
{245,5383},
{246,5384},
{253,5390},
{257,5394},
{259,5395},
{260,5396},
{261,5397},
{262,5398},
{264,5399},
{265,5400},
{266,5401},
{267,5402},
{270,5405},
{271,5406},
{272,5407},
{273,5408},
{276,5411},
{280,5414},
{284,5416},
{285,5417},
{286,5418},
{290,5422},
{291,5423},
{292,5424},
{293,5425},
{294,5426},
{295,5427},
{297,5428},
{298,5429},
{300,5431},
{302,5433},
{303,5434},
{304,5435},
{313,5444},
{314,5445},
{317,5447},
{318,5448},
{319,5449},
{320,5450},
{321,5451},
{323,5453},
{324,5454},
{325,5455},
{326,5456},
{329,5459},
{330,5460},
{331,5461},
{332,5462},
{335,5465},
{336,5466},
{337,5467},
{341,5471},
{342,5472},
{343,5473},
{345,5475},
{353,5483},
{355,5485},
{356,5486},
{357,5487},
{359,5488},
{360,5489},
{367,5496},
{372,5500},
{373,5501},
{377,5505},
{381,5509},
{382,5510},
{383,5511},
{384,5512},
{387,5515}
            };
        Dictionary<int, int> member = new Dictionary<int, int>()
        {
{395,9312},
{2498,9313},
{429,9314},
{430,9315},
{403,9316},
{2949,9317},
{704,9318},
{3218,9319},
{974,9320},
{428,9321},
{431,9322},
{733,9323},
{600,9324},
{396,9325},
{432,9326},
{2340,9327},
{581,9328},
{397,9329},
{433,9330},
{1217,9331},
{434,9332},
{398,9333},
{399,9334},
{3450,9335},
{760,9336},
{1215,9337},
{366,9338},
{6,9339},
{3307,9340},
{435,9341},
{7,9342},
{8,9343},
{9,9344},
{10,9345},
{436,9346},
{437,9347},
{976,9348},
{11,9349},
{2452,9350},
{1993,9351},
{570,9352},
{12,9353},
{13,9354},
{14,9355},
{15,9356},
{774,9357},
{16,9358},
{734,9359},
{579,9360},
{17,9361},
{438,9362},
{2312,9363},
{18,9364},
{19,9365},
{20,9366},
{21,9367},
{22,9368},
{23,9369},
{24,9370},
{439,9371},
{25,9372},
{26,9373},
{3100,9374},
{27,9375},
{364,9376},
{440,9377},
{28,9378},
{29,9379},
{30,9380},
{441,9381},
{1967,9382},
{442,9383},
{31,9384},
{2455,9385},
{348,9386},
{33,9387},
{34,9388},
{508,9389},
{601,9390},
{443,9391},
{1241,9392},
{3302,9393},
{1734,9394},
{2944,9395},
{962,9396},
{35,9397},
{36,9398},
{1733,9399},
{761,9400},
{37,9401},
{38,9402},
{39,9403},
{40,9404},
{41,9405},
{444,9406},
{445,9407},
{400,9408},
{447,9409},
{42,9410},
{43,9411},
{448,9412},
{449,9413},
{766,9414},
{44,9415},
{45,9416},
{567,9417},
{46,9418},
{47,9419},
{897,9420},
{814,9421},
{1941,9422},
{49,9423},
{50,9424},
{51,9425},
{735,9426},
{450,9427},
{425,9428},
{52,9429},
{53,9430},
{451,9431},
{695,9432},
{55,9433},
{56,9434},
{3388,9435},
{454,9436},
{453,9437},
{57,9438},
{455,9439},
{1538,9440},
{2838,9441},
{456,9442},
{2897,9443},
{2943,9444},
{3226,9445},
{969,9446},
{457,9447},
{1325,9448},
{406,9449},
{59,9450},
{1546,9451},
{458,9452},
{376,9453},
{1278,9454},
{61,9455},
{62,9456},
{602,9457},
{2665,9458},
{3263,9459},
{3483,9460},
{3492,9461},
{1262,9462},
{1232,9463},
{459,9464},
{973,9465},
{420,9466},
{1994,9467},
{591,9468},
{709,9469},
{64,9470},
{65,9471},
{460,9472},
{66,9473},
{67,9474},
{68,9475},
{72,9476},
{69,9477},
{1224,9478},
{70,9479},
{71,9480},
{349,9481},
{73,9482},
{461,9483},
{3222,9484},
{3223,9485},
{2494,9486},
{462,9487},
{74,9488},
{75,9489},
{463,9490},
{3153,9491},
{76,9492},
{944,9493},
{1214,9494},
{2495,9495},
{1952,9496},
{2496,9497},
{78,9498},
{79,9499},
{2995,9500},
{722,9501},
{783,9502},
{464,9503},
{465,9504},
{80,9505},
{466,9506},
{2941,9507},
{2942,9508},
{358,9509},
{1968,9510},
{81,9511},
{2774,9512},
{83,9513},
{84,9514},
{85,9515},
{86,9516},
{580,9517},
{87,9518},
{88,9519},
{2883,9520},
{423,9521},
{2491,9522},
{89,9523},
{90,9524},
{768,9525},
{91,9526},
{1692,9527},
{422,9528},
{708,9529},
{707,9530},
{92,9531},
{93,9532},
{1959,9533},
{775,9534},
{585,9535},
{370,9536},
{2490,9537},
{94,9538},
{95,9539},
{725,9540},
{96,9541},
{2334,9542},
{3299,9543},
{97,9544},
{98,9545},
{99,9546},
{100,9547},
{467,9548},
{101,9549},
{102,9550},
{468,9551},
{103,9552},
{2127,9553},
{731,9554},
{744,9555},
{104,9556},
{696,9557},
{105,9558},
{2894,9559},
{1970,9560},
{1969,9561},
{469,9562},
{470,9563},
{564,9564},
{2331,9565},
{108,9566},
{710,9567},
{2896,9568},
{3462,9569},
{471,9570},
{826,9571},
{1234,9572},
{472,9573},
{109,9574},
{110,9575},
{770,9576},
{111,9577},
{2786,9578},
{562,9579},
{3444,9580},
{1548,9581},
{113,9582},
{115,9583},
{3103,9584},
{114,9585},
{3611,9586},
{473,9587},
{474,9588},
{363,9589},
{365,9590},
{613,9591},
{475,9592},
{3606,9593},
{116,9594},
{117,9595},
{118,9596},
{119,9597},
{393,9598},
{3303,9599},
{120,9600},
{1685,9601},
{476,9602},
{121,9603},
{122,9604},
{2750,9605},
{612,9606},
{697,9607},
{699,9608},
{123,9609},
{124,9610},
{1238,9611},
{571,9612},
{569,9613},
{125,9614},
{126,9615},
{3220,9616},
{127,9617},
{477,9618},
{729,9619},
{414,9620},
{128,9621},
{129,9622},
{130,9623},
{3434,9624},
{2759,9625},
{133,9626},
{2719,9627},
{135,9628},
{136,9629},
{762,9630},
{824,9631},
{3227,9632},
{1693,9633},
{1963,9634},
{2668,9635},
{963,9636},
{2446,9637},
{572,9638},
{137,9639},
{138,9640},
{608,9641},
{1220,9642},
{590,9643},
{139,9644},
{577,9645},
{1261,9646},
{1857,9647},
{377,9648},
{3600,9649},
{3605,9650},
{140,9651},
{603,9652},
{141,9653},
{142,9654},
{737,9655},
{2791,9656},
{894,9657},
{143,9658},
{479,9659},
{929,9660},
{480,9661},
{738,9662},
{845,9663},
{145,9664},
{378,9665},
{2298,9666},
{557,9667},
{3309,9668},
{3308,9669},
{147,9670},
{792,9671},
{481,9672},
{2882,9673},
{148,9674},
{483,9675},
{575,9676},
{484,9677},
{607,9678},
{776,9679},
{486,9680},
{485,9681},
{150,9682},
{426,9683},
{404,9684},
{1966,9685},
{2673,9686},
{1951,9687},
{152,9688},
{344,9689},
{701,9690},
{1947,9691},
{487,9692},
{153,9693},
{154,9694},
{155,9695},
{156,9696},
{157,9697},
{488,9698},
{490,9699},
{489,9700},
{158,9701},
{159,9702},
{1219,9703},
{1606,9704},
{402,9705},
{161,9706},
{162,9707},
{163,9708},
{2891,9709},
{164,9710},
{165,9711},
{166,9712},
{369,9713},
{167,9714},
{168,9715},
{169,9716},
{170,9717},
{171,9718},
{615,9719},
{3224,9720},
{172,9721},
{173,9722},
{174,9723},
{175,9724},
{491,9725},
{759,9726},
{582,9727},
{177,9728},
{347,9729},
{1778,9730},
{1260,9731},
{2358,9732},
{178,9733},
{179,9734},
{180,9735},
{181,9736},
{492,9737},
{182,9738},
{183,9739},
{3360,9740},
{493,9741},
{673,9742},
{752,9743},
{184,9744},
{3603,9745},
{494,9746},
{185,9747},
{495,9748},
{2945,9749},
{2356,9750},
{186,9751},
{560,9752},
{187,9753},
{188,9754},
{3613,9755},
{732,9756},
{1323,9757},
{189,9758},
{496,9759},
{497,9760},
{427,9761},
{593,9762},
{498,9763},
{1547,9764},
{191,9765},
{192,9766},
{1964,9767},
{599,9768},
{194,9769},
{1244,9770},
{499,9771},
{424,9772},
{195,9773},
{500,9774},
{501,9775},
{1732,9776},
{3098,9777},
{730,9778},
{412,9779},
{196,9780},
{3311,9781},
{2514,9782},
{502,9783},
{1264,9784},
{773,9785},
{350,9786},
{503,9787},
{609,9788},
{705,9789},
{754,9790},
{711,9791},
{198,9792},
{2037,9793},
{2036,9794},
{2672,9795},
{201,9796},
{199,9797},
{200,9798},
{202,9799},
{203,9800},
{204,9801},
{205,9802},
{206,9803},
{2792,9804},
{207,9805},
{151,9806},
{190,9807},
{743,9808},
{504,9809},
{208,9810},
{209,9811},
{1132,9812},
{505,9813},
{895,9814},
{3101,9815},
{1942,9816},
{3604,9817},
{3300,9818},
{584,9819},
{583,9820},
{407,9821},
{405,9822},
{1832,9823},
{507,9824},
{210,9825},
{211,9826},
{408,9827},
{401,9828},
{1222,9829},
{212,9830},
{3102,9831},
{2948,9832},
{1940,9833},
{3452,9834},
{509,9835},
{512,9836},
{3610,9837},
{213,9838},
{510,9839},
{2136,9840},
{368,9841},
{511,9842},
{3602,9843},
{514,9844},
{215,9845},
{216,9846},
{217,9847},
{218,9848},
{2808,9849},
{517,9850},
{518,9851},
{519,9852},
{739,9853},
{219,9854},
{2795,9855},
{2039,9856},
{2038,9857},
{1960,9858},
{221,9859},
{566,9860},
{222,9861},
{223,9862},
{520,9863},
{521,9864},
{522,9865},
{224,9866},
{516,9867},
{225,9868},
{226,9869},
{523,9870},
{524,9871},
{2667,9872},
{1543,9873},
{525,9874},
{227,9875},
{515,9876},
{228,9877},
{526,9878},
{703,9879},
{2259,9880},
{568,9881},
{229,9882},
{527,9883},
{230,9884},
{231,9885},
{232,9886},
{233,9887},
{3509,9888},
{3510,9889},
{611,9890},
{1600,9891},
{1218,9892},
{234,9893},
{351,9894},
{235,9895},
{236,9896},
{742,9897},
{1686,9898},
{1085,9899},
{237,9900},
{528,9901},
{764,9902},
{559,9903},
{975,9904},
{983,9905},
{529,9906},
{238,9907},
{452,9908},
{267,9909},
{874,9910},
{530,9911},
{1736,9912},
{3494,9913},
{239,9914},
{240,9915},
{241,9916},
{3099,9917},
{242,9918},
{244,9919},
{1289,9920},
{531,9921},
{245,9922},
{246,9923},
{2187,9924},
{248,9925},
{3221,9926},
{576,9927},
{532,9928},
{249,9929},
{250,9930},
{1243,9931},
{748,9932},
{356,9933},
{251,9934},
{359,9935},
{252,9936},
{253,9937},
{780,9938},
{254,9939},
{255,9940},
{256,9941},
{533,9942},
{1229,9943},
{2793,9944},
{257,9945},
{379,9946},
{258,9947},
{259,9948},
{1579,9949},
{375,9950},
{261,9951},
{262,9952},
{534,9953},
{413,9954},
{367,9955},
{592,9956},
{2963,9957},
{3020,9958},
{594,9959},
{2472,9960},
{264,9961},
{355,9962},
{265,9963},
{266,9964},
{268,9965},
{1506,9966},
{535,9967},
{779,9968},
{269,9969},
{270,9970},
{271,9971},
{385,9972},
{352,9973},
{536,9974},
{578,9975},
{2518,9976},
{537,9977},
{538,9978},
{539,9979},
{272,9980},
{3612,9981},
{3301,9982},
{3304,9983},
{273,9984},
{1688,9985},
{712,9986},
{755,9987},
{274,9988},
{540,9989},
{275,9990},
{276,9991},
{277,9992},
{278,9993},
{1681,9994},
{1625,9995},
{361,9996},
{541,9997},
{2309,9998},
{586,9999},
{1507,10000},
{279,10001},
{280,10002},
{2946,10003},
{542,10004},
{281,10005},
{3228,10006},
{543,10007},
{777,10008},
{604,10009},
{283,10010},
{284,10011},
{384,10012},
{1958,10013},
{285,10014},
{286,10015},
{342,10016},
{544,10017},
{545,10018},
{546,10019},
{772,10020},
{757,10021},
{2664,10022},
{558,10023},
{746,10024},
{409,10025},
{353,10026},
{598,10027},
{287,10028},
{547,10029},
{288,10030},
{289,10031},
{290,10032},
{291,10033},
{698,10034},
{548,10035},
{957,10036},
{292,10037},
{293,10038},
{1221,10039},
{1216,10040},
{605,10041},
{700,10042},
{816,10043},
{295,10044},
{1544,10045},
{885,10046},
{296,10047},
{2521,10048},
{297,10049},
{354,10050},
{298,10051},
{549,10052},
{299,10053},
{300,10054},
{301,10055},
{2675,10056},
{410,10057},
{565,10058},
{1055,10059},
{550,10060},
{3219,10061},
{302,10062},
{346,10063},
{58,10064},
{303,10065},
{304,10066},
{305,10067},
{2333,10068},
{374,10069},
{307,10070},
{778,10071},
{308,10072},
{309,10073},
{310,10074},
{573,10075},
{828,10076},
{311,10077},
{312,10078},
{313,10079},
{314,10080},
{740,10081},
{315,10082},
{3298,10083},
{316,10084},
{3312,10085},
{317,10086},
{318,10087},
{756,10088},
{319,10089},
{320,10090},
{727,10091},
{2040,10092},
{728,10093},
{912,10094},
{343,10095},
{2444,10096},
{321,10097},
{1664,10098},
{553,10099},
{554,10100},
{323,10101},
{324,10102},
{552,10103},
{325,10104},
{2947,10105},
{2674,10106},
{2109,10107},
{506,10108},
{1164,10109},
{327,10110},
{713,10111},
{588,10112},
{587,10113},
{328,10114},
{702,10115},
{606,10116},
{329,10117},
{330,10118},
{1245,10119},
{332,10120},
{561,10121},
{563,10122},
{726,10123},
{966,10124},
{898,10125},
{747,10126},
{893,10127},
{333,10128},
{1617,10129},
{334,10130},
{360,10131},
{896,10132},
{3493,10133},
{335,10134},
{1735,10135},
{3310,10136},
{596,10137},
{597,10138},
{2666,10139},
{782,10140},
{336,10141},
{610,10142},
{555,10143},
{556,10144},
{337,10145},
{338,10146},
{1611,10147},
{1549,10148},
{339,10149},
{340,10150},
{771,10151},
{513,10152}
        };
        #endregion

        #region DELETE!!!!!!!!!!!!!!
        public void PopulateMemberRoles()
        {
            using (
                StreamReader r = new StreamReader("D:\\Users\\Nick\\Desktop\\Import Data SQL\\Data\\MemberRoles.json"))
            {
                string json = r.ReadToEnd();
                //TODO: delete the temp class
                List<MemberToRoleExtension> items = JsonConvert.DeserializeObject<List<MemberToRoleExtension>>(json);
                List<MemberRolesInShow> list = new List<MemberRolesInShow>();
                Debug.WriteLine("Writing Members Roles");
                foreach (var tmp in items)
                {
                    if (!member.ContainsKey(tmp.PreviousMemberId) || !functions.ContainsKey(tmp.PreviousFunctionId))
                    {
                        if(!member.ContainsKey(tmp.PreviousMemberId))
                            Debug.WriteLine("Missing member: " + tmp.PreviousMemberId);
                        if (!functions.ContainsKey(tmp.PreviousFunctionId))
                            Debug.WriteLine("Missing function: " + tmp.PreviousFunctionId);
                        continue;
                    }
                    var x = new MemberRolesInShow();
                    x.Group = tmp.Group;
                    x.Role = tmp.Role;
                    x.MemberId = member[tmp.PreviousMemberId];
                    x.FunctionId = functions[tmp.PreviousFunctionId];
                    list.Add(x);
                }
                using (var db = new DataContext())
                {
                    db.MemberRolesInShows.AddRange(list);
                    db.SaveChanges();
                }
            }


        }

        public void PopulateMemberShips()
        {
            using (
                StreamReader r = new StreamReader("D:\\Users\\Nick\\Desktop\\Import Data SQL\\Data\\Memberships.json"))
            {
                string json = r.ReadToEnd();
                //TODO: delete the temp class
                List<MembershipsExtension> items = JsonConvert.DeserializeObject<List<MembershipsExtension>>(json);
                List<Membership> list = new List<Membership>();
                Debug.WriteLine("Writing Memberships");
                foreach (var tmp in items)
                {
                    if (!member.ContainsKey(tmp.PreviousMemberId))
                    {
                        if (!member.ContainsKey(tmp.PreviousMemberId))
                            Debug.WriteLine("Missing member: " + tmp.PreviousMemberId);
                        continue;
                    }
                    var x = new Membership();
                    x.StartDate = tmp.StartDate;
                    x.EndDate = tmp.EndDate;
                    x.Member = member[tmp.PreviousMemberId];
                    x.MembershipType = tmp.MembershipType;
                    x.IsSubscription = tmp.IsSubscription;
                    list.Add(x);
                }
                using (var db = new DataContext())
                {
                    db.Memberships.AddRange(list);
                    db.SaveChanges();
                }
            }
        }

        public void PopulateLongServiceAwards()
        {
            using (
                StreamReader r = new StreamReader("D:\\Users\\Nick\\Desktop\\Import Data SQL\\Data\\LongServiceAwards.json"))
            {
                string json = r.ReadToEnd();
                //TODO: delete the temp class
                List<LongServiceAwardExtension> items = JsonConvert.DeserializeObject<List<LongServiceAwardExtension>>(json);
                List<LongServiceAward> list = new List<LongServiceAward>();
                Debug.WriteLine("Writing LongServiceAwards");
                foreach (var tmp in items)
                {
                    if (!member.ContainsKey(tmp.PreviousMemberId))
                    {
                        if (!member.ContainsKey(tmp.PreviousMemberId))
                            Debug.WriteLine("Missing member: " + tmp.PreviousMemberId);
                        continue;
                    }
                    var x = new LongServiceAward();
                    x.Award = tmp.Award-2;
                    x.Member = member[tmp.PreviousMemberId];
                    list.Add(x);
                }
                using (var db = new DataContext())
                {
                    db.LongServiceAwards.AddRange(list);
                    db.SaveChanges();
                }
            }
        }
        #endregion
    }

    //TODO:Delete
    public class MemberToRoleExtension : MemberRolesInShow
    {
        public int PreviousFunctionId { get; set; }
        public int PreviousMemberId { get; set; }
    }

    public class MembershipsExtension : Membership
    {
        public int PreviousMemberId { get; set; }
    }

    public class LongServiceAwardExtension : LongServiceAward
    {
        public int PreviousMemberId { get; set; }
    }
}
